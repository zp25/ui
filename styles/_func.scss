/**
 * placeholders
 */
%ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

%hidden {
  display: none !important;
}

// @link https://github.com/h5bp/html5-boilerplate/blob/6180cd90fca68568353c20cc7f91f5d653583e7f/src/css/main.css#L121
%visuallyhidden {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  border: 0;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
}

// @link http://www.cssmojo.com/latest_new_clearfix_so_far/
%cf {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

/**
 * functions
 */
@function color($key: normal) {
  @if map-has-key($colorMap, $key) {
    @return map-get($colorMap, $key);
  }

  @if type-of($key) == color {
    @return #{$key};
  }

  @warn 'Unknown `#{$key}` in $colorMap.';
  @return null;
}

@function torem($px) {
  $rem: 100px;
  @return ($px / $rem) + rem;
}

// font-size(px): 12, 14, 16, 20, 34
$sizeMap: (
  lighter: torem(12px),
  normal: torem(14px),
  bold: torem(16px),
  bolder: torem(20px),
);

@function fontSize($key: normal) {
  @if map-has-key($sizeMap, $key) {
    @return map-get($sizeMap, $key);
  }

  @if type-of($key) == number and unit($key) == 'px' {
    @return torem($key);
  }

  @warn 'Unknown `#{$key}` in $sizeMap.';
  @return null;
}

/**
 * mixins
 */
@mixin flexbox(
  $direction:row,
  $wrap:nowrap,
  $justify-content:flex-start,
  $align-items:stretchï¼Œ
  $align-content:stretch
) {
  display: flex;
  flex-flow: $direction $wrap;
  justify-content: $justify-content;
  align-items: $align-items;
  align-content: $align-content;
}

@mixin imageSet($x2, $x3) {
  background-image: url($x2);
  background-image: image-set(url($x2) 2x, url($x3) 3x);
}
