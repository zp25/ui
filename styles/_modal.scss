.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1000;

  transform-style: preserve-3d;
  transform: translate3d(100%, 0, 0);

  &.modal--active {
    transform: translate3d(0, 0, 0);
  }

  &.modal--mask {
    background-color: rgba(1, 1, 1, 0.6);
  }

  %dialogHide {
    transform: translateZ(-999px);
    opacity: 0;
    pointer-events: none;
  }

  %dialogShow {
    transform: translateZ(0);
    opacity: 1;
    pointer-events: auto;
  }

  .modal__dialog {
    @extend %dialogHide;

    position: absolute;
    top: 40%;
    left: 50%;
    transition: opacity 0.08s ease-in-out;
    overflow: hidden;

    &.modal__dialog--active {
      @extend %dialogShow;
    }
  }

  %dialogCommon {
    color: var(--white, #fff);
    background-color: var(--black, #151513);
    padding: torem(15px);
    border: 0;
    border-radius: torem(12px);
  }

  .modal__dialog--loading {
    @extend %dialogCommon;
    @include flexbox(column, nowrap, center, center);

    width: torem(80px);
    height: torem(80px);
    margin-top: torem(-40px);
    margin-left: torem(-40px);
  }

  .modal__dialog--message {
    @extend %dialogCommon;
    @include flexbox(column, nowrap, center, center);

    width: torem(132px);
    height: torem(104px);
    margin-top: torem(-52px);
    margin-left: torem(-66px);
    animation: dialogFadeIn 0.08s ease-in-out;

    .message {
      font-size: fontSize(bold);
      text-align: center;
      margin: 0;
      animation: contentFadeIn 0.1s ease-in-out;
    }
  }
}

// modal dialog过渡动画
@keyframes dialogFadeIn {
  from {
    transform: scale((80 / 132), (80 / 104));
  }

  to {
    transform: scale(1);
  }
}

@keyframes contentFadeIn {
  0%,
  80% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/** @see {@link https://github.com/tobiasahlin/SpinKit} */
.loading {
  position: relative;
  width: torem(32px);
  height: torem(32px);
  overflow: hidden;

  .loading__circle {
    position: absolute;
    left: 0;
    top: 0;
    display: inline-block;
    width: 100%;
    height: 100%;

    &::before {
      content: '';
      display: block;
      margin: 0 auto;
      width: 15%;
      height: 15%;
      background-color: var(--white, #fff);
      border-radius: 100%;
      animation: circleDelay 1.2s ease-in-out infinite both;
    }

    @for $i from 2 through 12 {
      &.loading__circle--#{$i} {
        transform: rotate(($i - 1) * 30deg);

        &::before {
          animation-delay: -1.2s + ($i - 1) * 0.1;
        }
      }
    }
  }
}

@keyframes circleDelay {
  0%,
  80%,
  100% {
    transform: scale(0);
  }

  40% {
    transform: scale(1);
  }
}
